import { MigrationInterface, QueryRunner } from "typeorm";

export class MigrationName1719848039191 implements MigrationInterface {
    name = 'MigrationName1719848039191'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`UserDetails\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` ADD \`createdBy\` varchar(36) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` ADD \`createdByName\` varchar(50) NULL`);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` ADD \`updatedBy\` varchar(36) NULL`);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` ADD \`isDeleted\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`Teams\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`Teams\` ADD \`createdBy\` varchar(36) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`Teams\` ADD \`createdByName\` varchar(50) NULL`);
        await queryRunner.query(`ALTER TABLE \`Teams\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`Teams\` ADD \`updatedBy\` varchar(36) NULL`);
        await queryRunner.query(`ALTER TABLE \`Teams\` ADD \`isDeleted\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`Users\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`Users\` ADD \`createdBy\` varchar(36) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`Users\` ADD \`createdByName\` varchar(50) NULL`);
        await queryRunner.query(`ALTER TABLE \`Users\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`Users\` ADD \`updatedBy\` varchar(36) NULL`);
        await queryRunner.query(`ALTER TABLE \`Users\` ADD \`isDeleted\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`Tasks\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`Tasks\` ADD \`createdBy\` varchar(36) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`Tasks\` ADD \`createdByName\` varchar(50) NULL`);
        await queryRunner.query(`ALTER TABLE \`Tasks\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`Tasks\` ADD \`updatedBy\` varchar(36) NULL`);
        await queryRunner.query(`ALTER TABLE \`Tasks\` ADD \`isDeleted\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`Columns\` ADD \`createdAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`Columns\` ADD \`createdBy\` varchar(36) NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`Columns\` ADD \`createdByName\` varchar(50) NULL`);
        await queryRunner.query(`ALTER TABLE \`Columns\` ADD \`updatedAt\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`Columns\` ADD \`updatedBy\` varchar(36) NULL`);
        await queryRunner.query(`ALTER TABLE \`Columns\` ADD \`isDeleted\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` DROP FOREIGN KEY \`FK_e60e37fdce8f5e2b289b621433f\``);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` CHANGE \`id\` \`id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` DROP PRIMARY KEY`);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` DROP COLUMN \`id\``);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` ADD \`id\` varchar(36) NOT NULL PRIMARY KEY`);
        await queryRunner.query(`DROP INDEX \`REL_e60e37fdce8f5e2b289b621433\` ON \`UserDetails\``);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` DROP COLUMN \`userId\``);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` ADD \`userId\` varchar(36) NULL`);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` ADD UNIQUE INDEX \`IDX_e60e37fdce8f5e2b289b621433\` (\`userId\`)`);
        await queryRunner.query(`ALTER TABLE \`Teams\` CHANGE \`id\` \`id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`Teams\` DROP PRIMARY KEY`);
        await queryRunner.query(`ALTER TABLE \`Teams\` DROP COLUMN \`id\``);
        await queryRunner.query(`ALTER TABLE \`Teams\` ADD \`id\` varchar(36) NOT NULL PRIMARY KEY`);
        await queryRunner.query(`ALTER TABLE \`Users\` CHANGE \`id\` \`id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`Users\` DROP PRIMARY KEY`);
        await queryRunner.query(`ALTER TABLE \`Users\` DROP COLUMN \`id\``);
        await queryRunner.query(`ALTER TABLE \`Users\` ADD \`id\` varchar(36) NOT NULL PRIMARY KEY`);
        await queryRunner.query(`ALTER TABLE \`Tasks\` CHANGE \`id\` \`id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`Tasks\` DROP PRIMARY KEY`);
        await queryRunner.query(`ALTER TABLE \`Tasks\` DROP COLUMN \`id\``);
        await queryRunner.query(`ALTER TABLE \`Tasks\` ADD \`id\` varchar(36) NOT NULL PRIMARY KEY`);
        await queryRunner.query(`ALTER TABLE \`Columns\` CHANGE \`id\` \`id\` int NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`Columns\` DROP PRIMARY KEY`);
        await queryRunner.query(`ALTER TABLE \`Columns\` DROP COLUMN \`id\``);
        await queryRunner.query(`ALTER TABLE \`Columns\` ADD \`id\` varchar(36) NOT NULL PRIMARY KEY`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`REL_e60e37fdce8f5e2b289b621433\` ON \`UserDetails\` (\`userId\`)`);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` ADD CONSTRAINT \`FK_e60e37fdce8f5e2b289b621433f\` FOREIGN KEY (\`userId\`) REFERENCES \`Users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`UserDetails\` DROP FOREIGN KEY \`FK_e60e37fdce8f5e2b289b621433f\``);
        await queryRunner.query(`DROP INDEX \`REL_e60e37fdce8f5e2b289b621433\` ON \`UserDetails\``);
        await queryRunner.query(`ALTER TABLE \`Columns\` DROP COLUMN \`id\``);
        await queryRunner.query(`ALTER TABLE \`Columns\` ADD \`id\` int NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`Columns\` ADD PRIMARY KEY (\`id\`)`);
        await queryRunner.query(`ALTER TABLE \`Columns\` CHANGE \`id\` \`id\` int NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`Tasks\` DROP COLUMN \`id\``);
        await queryRunner.query(`ALTER TABLE \`Tasks\` ADD \`id\` int NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`Tasks\` ADD PRIMARY KEY (\`id\`)`);
        await queryRunner.query(`ALTER TABLE \`Tasks\` CHANGE \`id\` \`id\` int NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`Users\` DROP COLUMN \`id\``);
        await queryRunner.query(`ALTER TABLE \`Users\` ADD \`id\` int NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`Users\` ADD PRIMARY KEY (\`id\`)`);
        await queryRunner.query(`ALTER TABLE \`Users\` CHANGE \`id\` \`id\` int NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`Teams\` DROP COLUMN \`id\``);
        await queryRunner.query(`ALTER TABLE \`Teams\` ADD \`id\` int NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`Teams\` ADD PRIMARY KEY (\`id\`)`);
        await queryRunner.query(`ALTER TABLE \`Teams\` CHANGE \`id\` \`id\` int NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` DROP INDEX \`IDX_e60e37fdce8f5e2b289b621433\``);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` DROP COLUMN \`userId\``);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` ADD \`userId\` int NULL`);
        await queryRunner.query(`CREATE UNIQUE INDEX \`REL_e60e37fdce8f5e2b289b621433\` ON \`UserDetails\` (\`userId\`)`);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` DROP COLUMN \`id\``);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` ADD \`id\` int NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` ADD PRIMARY KEY (\`id\`)`);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` CHANGE \`id\` \`id\` int NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` ADD CONSTRAINT \`FK_e60e37fdce8f5e2b289b621433f\` FOREIGN KEY (\`userId\`) REFERENCES \`Users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`Columns\` DROP COLUMN \`isDeleted\``);
        await queryRunner.query(`ALTER TABLE \`Columns\` DROP COLUMN \`updatedBy\``);
        await queryRunner.query(`ALTER TABLE \`Columns\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`Columns\` DROP COLUMN \`createdByName\``);
        await queryRunner.query(`ALTER TABLE \`Columns\` DROP COLUMN \`createdBy\``);
        await queryRunner.query(`ALTER TABLE \`Columns\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`Tasks\` DROP COLUMN \`isDeleted\``);
        await queryRunner.query(`ALTER TABLE \`Tasks\` DROP COLUMN \`updatedBy\``);
        await queryRunner.query(`ALTER TABLE \`Tasks\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`Tasks\` DROP COLUMN \`createdByName\``);
        await queryRunner.query(`ALTER TABLE \`Tasks\` DROP COLUMN \`createdBy\``);
        await queryRunner.query(`ALTER TABLE \`Tasks\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`Users\` DROP COLUMN \`isDeleted\``);
        await queryRunner.query(`ALTER TABLE \`Users\` DROP COLUMN \`updatedBy\``);
        await queryRunner.query(`ALTER TABLE \`Users\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`Users\` DROP COLUMN \`createdByName\``);
        await queryRunner.query(`ALTER TABLE \`Users\` DROP COLUMN \`createdBy\``);
        await queryRunner.query(`ALTER TABLE \`Users\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`Teams\` DROP COLUMN \`isDeleted\``);
        await queryRunner.query(`ALTER TABLE \`Teams\` DROP COLUMN \`updatedBy\``);
        await queryRunner.query(`ALTER TABLE \`Teams\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`Teams\` DROP COLUMN \`createdByName\``);
        await queryRunner.query(`ALTER TABLE \`Teams\` DROP COLUMN \`createdBy\``);
        await queryRunner.query(`ALTER TABLE \`Teams\` DROP COLUMN \`createdAt\``);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` DROP COLUMN \`isDeleted\``);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` DROP COLUMN \`updatedBy\``);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` DROP COLUMN \`updatedAt\``);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` DROP COLUMN \`createdByName\``);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` DROP COLUMN \`createdBy\``);
        await queryRunner.query(`ALTER TABLE \`UserDetails\` DROP COLUMN \`createdAt\``);
    }

}
