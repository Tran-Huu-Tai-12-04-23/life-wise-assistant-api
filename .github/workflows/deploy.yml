name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker environment
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub (optional, if pushing image)
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.IMAGE_NAME }}:${{ secrets.TAG_NAME }} .

      - name: Add tag docker image (optional)
        run: docker tag ${{ secrets.IMAGE_NAME }}:${{ secrets.TAG_NAME }} ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ secrets.TAG_NAME }}

      - name: Push Docker image to docker hub (optional)
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}:${{ secrets.TAG_NAME }}

      - name: Deploy to Server (using SSH and Docker)
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}  # Assuming SSH key configured
          IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          TAG_NAME: ${{ secrets.TAG_NAME }}
        run: |
          ssh -o StrictHostKeyChecking=no -p 24700 $SSH_USERNAME@$SSH_HOST << EOF
          mkdir -p /container && cd /container

          # Remove existing image (if any)
          docker images --filter=reference=$DOCKER_USERNAME/$IMAGE_NAME --quiet | xargs docker rmi

          # Pull the latest image
          docker pull $DOCKER_USERNAME/$IMAGE_NAME:$TAG_NAME

          # Stop and remove existing container (if any)
          docker stop --time=0 $(docker ps -aq --filter name=$DOCKER_USERNAME/$IMAGE_NAME) && docker rm $(docker ps -aq --filter name=$DOCKER_USERNAME/$IMAGE_NAME)

          # Run the container
          docker run -d -p 3000:3000 $DOCKER_USERNAME/$IMAGE_NAME:$TAG_NAME
          EOF
